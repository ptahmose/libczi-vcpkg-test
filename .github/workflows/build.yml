name: Build and Test libCZI-vcpkg

on:
  push:
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test_on_windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: run tests on Windows-x64
        shell: bash
        run: |
          bash ./run_test.sh

  test_on_linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: run tests on Linux-x64
        shell: bash
        run: |
          bash ./run_test.sh

  test_on_macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, macos-14]  # Intel + Apple Silicon
    steps:
      - uses: actions/checkout@v4
      - name: run tests on ${{ matrix.os }}
        shell: bash
        run: |
          bash ./run_test.sh

  test_on_linux_qemu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu22.04
            name: linux-arm64
          - arch: riscv64
            distro: ubuntu22.04
            name: linux-riscv64
    name: Run tests on ${{ matrix.name }} (QEMU)
    steps:
      - uses: actions/checkout@v4
      - name: Run on ${{ matrix.name }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          dockerRunArgs: |
            --volume "${{ github.workspace }}:/workspace"
            --workdir /workspace
          install: |
            apt-get update
            DEBIAN_FRONTEND=noninteractive apt-get install -y \
              git curl zip unzip tar ca-certificates \
              build-essential pkg-config cmake ninja-build
          run: |
            bash ./run_test.sh
